diff --git a/node_modules/@lavamoat/aa/src/index.js b/node_modules/@lavamoat/aa/src/index.js
index 070b772..7090bc8 100644
--- a/node_modules/@lavamoat/aa/src/index.js
+++ b/node_modules/@lavamoat/aa/src/index.js
@@ -76,6 +76,7 @@ function getDependencies(packageDir, includeDevDeps) {
     ...Object.keys(packageJson.dependencies || {}),
     ...Object.keys(packageJson.optionalDependencies || {}),
     ...Object.keys(packageJson.peerDependencies || {}),
+    ...Object.keys(packageJson.peerDependenciesMeta || {}),
     ...Object.keys(includeDevDeps ? packageJson.devDependencies || {} : {}),
   ].sort(comparePreferredPackageName)
   return depsToWalk
@@ -156,6 +157,14 @@ function getPackageNameForModulePath(canonicalNameMap, modulePath) {
   const relativeToPackageDir = path.relative(packageDir, modulePath)
   // files should never be associated with a package directory across a package boundary (as tested via the presense of "node_modules" in the path)
   if (relativeToPackageDir.includes('node_modules')) {
+
+    // TO REMOVE ONCE WE DO NOT RELY ON EXTENSION NODE MODULES
+    // Which is not the case until we have our own UI components and stop importing the extension ones.
+    // This is happening because of how browserify lavamoat resolves require paths
+    if (relativeToPackageDir.includes('submodules/extension/node_modules/')) {
+      return packageName;
+    }
+
     throw new Error(`LavaMoat - Encountered unknown package directory for file "${modulePath}"`)
   }
   return packageName
