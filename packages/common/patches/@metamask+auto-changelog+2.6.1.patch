diff --git a/node_modules/@metamask/auto-changelog/dist/update-changelog.js b/node_modules/@metamask/auto-changelog/dist/update-changelog.js
index 649f975..11bd538 100644
--- a/node_modules/@metamask/auto-changelog/dist/update-changelog.js
+++ b/node_modules/@metamask/auto-changelog/dist/update-changelog.js
@@ -9,7 +9,7 @@ const execa_1 = __importDefault(require("execa"));
 const parse_changelog_1 = require("./parse-changelog");
 const constants_1 = require("./constants");
 async function getMostRecentTag() {
-    const revListArgs = ['rev-list', '--tags', '--max-count=1', '--date-order'];
+    const revListArgs = ['rev-list', '--tags=common/*', '--max-count=1', '--date-order'];
     const results = await runCommand('git', revListArgs);
     if (results.length === 0) {
         return null;
@@ -20,7 +20,8 @@ async function getMostRecentTag() {
         '--tags',
         mostRecentTagCommitHash,
     ]);
-    assert_1.strict.equal(mostRecentTag === null || mostRecentTag === void 0 ? void 0 : mostRecentTag[0], 'v', 'Most recent tag should start with v');
+
+    assert_1.strict.equal(mostRecentTag === null || mostRecentTag === void 0 ? void 0 : mostRecentTag.startsWith('common/'), true, 'Most recent tag should start with v');
     return mostRecentTag;
 }
 async function getCommits(commitHashes) {
@@ -116,7 +117,7 @@ async function updateChangelog({ changelogContent, currentVersion, repoUrl, isRe
     // Ensure we have all tags on remote
     await runCommand('git', ['fetch', '--tags']);
     const mostRecentTag = await getMostRecentTag();
-    if (isReleaseCandidate && mostRecentTag === `v${currentVersion}`) {
+    if (isReleaseCandidate && mostRecentTag === `common/${currentVersion}`) {
         throw new Error(`Current version already has tag, which is unexpected for a release candidate.`);
     }
     const commitRange = mostRecentTag === null ? 'HEAD' : `${mostRecentTag}..HEAD`;
