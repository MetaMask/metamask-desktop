# .github/workflows/publish-common-release.yml
name: Publish common package

on:
  workflow_dispatch:
    inputs:
      bypass_is_release:
        type: boolean
        required: false
        description: Bypass is release job
        default: false
  push:
    paths:
      - packages/common/**
    branches: [main]

jobs:
  check-common-workflows:
    name: Lints workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download actionlint
        id: download-actionlint
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/7fdc9630cc360ea1a469eed64ac6d78caeda1234/scripts/download-actionlint.bash) 1.6.22
        shell: bash
      - name: Check workflow files
        run: ${{ steps.download-actionlint.outputs.executable }} -color .github/workflows/publish-common-release.yml
        shell: bash

  is-release:
    name: Determine whether this is a release merge commit
    runs-on: ubuntu-latest
    outputs:
      IS_RELEASE: ${{ steps.is-release.outputs.IS_RELEASE }}
    steps:
      - id: is-release
        if:  ${{ !github.event.inputs.bypass_is_release }}
        uses: MetaMask/action-is-release@v1
        with:
          commit-starts-with: 'Release Common [version]'

  build:
    needs: is-release
    if: ${{ needs.is-release.outputs.IS_RELEASE == 'true' || github.event.inputs.bypass_is_release }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        shell: bash
        run: yarn install --immutable
      - name: Build
        shell: bash
        run: yarn common build
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./packages/common/dist
          key: ${{ github.sha }}

  publish-common-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - name: Create Tag and Github Release
        id: tag-and-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          PACKAGE_JSON="./packages/common/package.json"
          RELEASE_VERSION="$(jq --raw-output .version $PACKAGE_JSON)"
          echo "@metamask/desktop@$RELEASE_VERSION"
          gh release create "@metamask/desktop@$RELEASE_VERSION" -F packages/common/CHANGELOG.md

  # Optionally perform a dry-run publish to review
  publish-common-npm-dry-run:
    runs-on: ubuntu-latest
    needs: publish-common-release
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./packages/common/dist
          key: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        shell: bash
        run: yarn install --immutable
      - name: Dry Run Publish
        id: dry-run-publish
        shell: bash
        run: yarn common pack --dry-run

  publish-common-npm:
    runs-on: ubuntu-latest
    needs: publish-common-npm-dry-run
    environment: npm-publish
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./packages/common/dist
          key: ${{ github.sha }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ./.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        shell: bash
        run: yarn install --immutable
      - name: Publish
        id: publish
        shell: bash
        run: yarn common publish
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
