version: 2.1

orbs:
  slack: circleci/slack@4.1

parameters:
  app-dir:
    type: string
    default: packages/app
  common-dir:
    type: string
    default: packages/common
  extension-dir:
    type: string
    default: packages/app/submodules/extension
  extension-release:
    type: boolean
    default: false
  extension-release-branch:
    type: string
    default: main
  app-stable-branch:
    type: string
    default: main

commands:
  checkout_with_submodule:
    steps:
      - when:
          condition:
            and: # All must be true to trigger
            - equal: [false, << pipeline.parameters.extension-release >>]
          steps:
          - checkout
          - add_ssh_keys:
              fingerprints:
                - "aa:9c:7b:e9:01:de:82:e6:d4:ae:5e:ff:c3:fa:d9:5c"
          - run:
              name: Setup submodule
              command: sh scripts/init-submodule.sh
      - when:
          condition:
            and: # All must be true to trigger
            - equal: [true, << pipeline.parameters.extension-release >>]
          steps:
          - run:
              name: checkout
              command: git clone -b "<< pipeline.parameters.app-stable-branch >>" "https://github.com/MetaMask/metamask-desktop.git" .
          - add_ssh_keys:
              fingerprints:
                - "aa:9c:7b:e9:01:de:82:e6:d4:ae:5e:ff:c3:fa:d9:5c"
          - run:
              name: Setup submodule
              command: |
                ssh-keyscan github.com >> ~/.ssh/known_hosts
                sh scripts/init-submodule.sh
                cd packages/app/submodules/extension
                git checkout << pipeline.parameters.extension-release-branch >>
  notify_slack_ci_failure:
    steps:
      - when:
          condition:
            and: # All must be true to trigger
            - equal: [true, << pipeline.parameters.extension-release >>]
          steps:
          - slack/notify:
              mentions: '@metamask-desktop'
              template: basic_fail_1
              event: fail

executors:
  node-browsers:
    docker:
      - image: circleci/node:16-browsers
    environment:
      APP_DIR: << pipeline.parameters.app-dir >>
      COMMON_DIR: << pipeline.parameters.common-dir >>
      EXTENSION_DIR: << pipeline.parameters.extension-dir >>
  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v1.29.1-focal
    resource_class: large
    environment:
      APP_DIR: << pipeline.parameters.app-dir >>
      COMMON_DIR: << pipeline.parameters.common-dir >>
      EXTENSION_DIR: << pipeline.parameters.extension-dir >>
      NODE_ENV: development
      OSTYPE: linux-gnu
  electron-builder:
    docker:
      - image: electronuserland/builder:16-wine
    environment:
      APP_DIR: << pipeline.parameters.app-dir >>
      EXTENSION_DIR: << pipeline.parameters.extension-dir >>
  mac:
    macos:
      xcode: 12.5.1
    resource_class: large
    environment:
      APP_DIR: << pipeline.parameters.app-dir >>
      EXTENSION_DIR: << pipeline.parameters.extension-dir >>

workflows:
  test_and_release:
    when:
      and: # All must be true to trigger
      - equal: [false, << pipeline.parameters.extension-release >>]
    jobs:
      - install-deps
      - install-deps-extension:
          requires:
            - build-common
      - validate-deps:
          requires:
            - install-deps
      - validate-lock-duplicates:
          requires:
            - install-deps
      - lint-lockfile:
          requires:
            - install-deps
      - validate-lavamoat-config:
          requires:
            - install-deps-extension
      - audit:
          requires:
            - install-deps
      - build-common:
          requires:
            - install-deps
      - build-app:
          requires:
            - install-deps-extension
      - build-app-test-extension:
          requires:
            - install-deps-extension
      - build-app-test-app:
          requires:
            - install-deps-extension
      - build-ui:
          requires:
            - install-deps-extension
      - build-ui-test-extension:
          requires:
            - install-deps-extension
      - build-ui-test-app:
          requires:
            - install-deps-extension
      - build-extension-test-extension:
          requires:
            - install-deps-extension
      - build-extension-test-app:
          requires:
            - install-deps-extension
      - build-extension-test-mv3:
          requires:
            - install-deps-extension
      - lint-common:
          requires:
            - install-deps
      - lint-app:
          requires:
            - build-common
      - test-unit-common:
          requires:
            - install-deps
      - test-unit-app:
          requires:
            - build-common
      - test-e2e-extension:
          requires:
            - build-app-test-extension
            - build-ui-test-extension
            - build-extension-test-extension
      - test-e2e-extension-snaps:
          requires:
            - build-app-test-extension
            - build-ui-test-extension
            - build-extension-test-extension
      - test-e2e-app:
          requires:
            - build-app-test-app
            - build-ui-test-app
            - build-extension-test-app
      - test-e2e-extension-mv3:
          requires:
            - build-app-test-extension
            - build-ui-test-extension
            - build-extension-test-mv3
      - package-windows:
          requires:
            - build-app
            - build-ui
      - package-linux:
          requires:
            - build-app
            - build-ui
      - package-mac:
          requires:
            - build-app
            - build-ui

  released_extension_test:
    when:
      and: # All must be true to trigger
      - equal: [true, << pipeline.parameters.extension-release >>]
    jobs:
      - install-deps:
          context: mm-desktop-slack-secrets
      - install-deps-extension:
          requires:
            - build-common
          context: mm-desktop-slack-secrets
      - validate-deps:
          requires:
            - install-deps
          context: mm-desktop-slack-secrets
      - validate-lock-duplicates:
          requires:
            - install-deps
          context: mm-desktop-slack-secrets
      - validate-lavamoat-config:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - audit:
          requires:
            - install-deps
          context: mm-desktop-slack-secrets
      - build-common:
          requires:
            - install-deps
          context: mm-desktop-slack-secrets
      - build-app-test-extension:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - build-app-test-app:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - build-ui-test-extension:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - build-ui-test-app:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - build-extension-test-extension:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - build-extension-test-app:
          requires:
            - install-deps-extension
          context: mm-desktop-slack-secrets
      - test-e2e-extension:
          requires:
            - build-app-test-extension
            - build-ui-test-extension
            - build-extension-test-extension
          context: mm-desktop-slack-secrets
      - test-e2e-extension-snaps:
          requires:
            - build-app-test-extension
            - build-ui-test-extension
            - build-extension-test-extension
          context: mm-desktop-slack-secrets
      - test-e2e-app:
          requires:
            - build-app-test-app
            - build-ui-test-app
            - build-extension-test-app
          context: mm-desktop-slack-secrets
      - notify-slack-ci-success:
          requires:
            - validate-deps
            - validate-lock-duplicates
            - validate-lavamoat-config
            - audit
            - lint-app
            - lint-common
            - test-unit-common
            - test-unit-app
            - test-e2e-extension
            - test-e2e-extension-snaps
            - test-e2e-app
            - test-e2e-extension-mv3
            - package-windows
            - package-linux
            - package-mac
          context: mm-desktop-slack-secrets

jobs:
  install-deps:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - restore_cache:
          key: dependency-cache-v4-{{ checksum "yarn.lock" }}
      - run:
          name: Install deps
          command: yarn install --frozen-lockfile
      - save_cache:
          key: dependency-cache-v4-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/install-state.gz
            - node_modules/
            - << pipeline.parameters.common-dir >>/node_modules/
            - << pipeline.parameters.app-dir >>/node_modules/
      - persist_to_workspace:
          root: .
          paths:
            - .yarn/cache
            - .yarn/install-state.gz
            - node_modules
            - << pipeline.parameters.app-dir >>/node_modules
            - << pipeline.parameters.common-dir >>/node_modules
      - notify_slack_ci_failure

  notify-slack-ci-success:
      executor: node-browsers
      steps:
        - slack/notify:
            custom: |
              {
                "text": "",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "âœ… *Success* #${CIRCLE_BUILD_NUM} `${CIRCLE_PROJECT_REPONAME}` on `${CIRCLE_BRANCH}`"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View Job"
                        },
                        "url": "${CIRCLE_BUILD_URL}"
                      }
                    ]
                  }
                ]
              }
            event: always

  install-deps-extension:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - restore_cache:
          key: dependency-cache-extension-v1-{{ checksum "<< pipeline.parameters.extension-dir >>/yarn.lock" }}
      - run:
          name: Install extension deps
          command: yarn extension --frozen-lockfile
      - save_cache:
          key: dependency-cache-extension-v1-{{ checksum "<< pipeline.parameters.extension-dir >>/yarn.lock" }}
          paths:
            - << pipeline.parameters.extension-dir >>/.yarn/cache/
            - << pipeline.parameters.extension-dir >>/node_modules/
      - when:
          condition:
            and:
              - not:
                  matches: { pattern: "^release/.+$", value: << pipeline.git.branch >> }
              - not:
                  equal: [ app-stable, << pipeline.git.branch >> ]
              - equal: [false, << pipeline.parameters.extension-release >>]
          steps:
            - run:
                name: Initialise extension
                command: yarn setup:extension
            - run:
                name: Generate extension browserify LavaMoat policies for desktop build type
                command: yarn extension lavamoat:webapp:auto:ci -t desktop
            - persist_to_workspace:
                root: .
                paths:
                  - << pipeline.parameters.extension-dir >>/lavamoat/browserify/desktop/policy.json
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.extension-dir >>/yarn.lock
            - << pipeline.parameters.extension-dir >>/package.json
            - << pipeline.parameters.extension-dir >>/node_modules
      - notify_slack_ci_failure

  validate-deps:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: root depcheck
          command: yarn depcheck
      - run:
          name: common depcheck
          command: yarn depcheck ${COMMON_DIR}
      - run:
          name: app depcheck
          command: yarn depcheck ${APP_DIR}
      - notify_slack_ci_failure

  validate-lock-duplicates:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Detect yarn lock deduplications
          command: yarn dedupe --check
      - notify_slack_ci_failure

  lint-lockfile:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: lockfile-lint
          command: yarn lint:lockfile
      - notify_slack_ci_failure

  audit:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: root audit
          command: WORKSPACE='' .circleci/scripts/yarn-audit.sh
      - run:
          name: common audit
          command: WORKSPACE='common' .circleci/scripts/yarn-audit.sh
      - run:
          name: app audit
          command: WORKSPACE='app' .circleci/scripts/yarn-audit.sh
      - notify_slack_ci_failure

  validate-lavamoat-config:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Validate root allow-scripts config
          command: SCRIPT='allow-scripts' .circleci/scripts/validate-allow-scripts.sh
      - run:
          name: Validate common allow-scripts config
          command: SCRIPT='common allow-scripts' .circleci/scripts/validate-allow-scripts.sh
      - run:
          name: Validate app allow-scripts config
          command: SCRIPT='app allow-scripts' .circleci/scripts/validate-allow-scripts.sh
      - run:
          name: Validate app LavaMoat policy
          command: SCRIPT='app lavamoat' .circleci/scripts/validate-lavamoat-policy.sh
      - run:
          name: Setup UI build
          command: yarn setup:ui:build
      - run:
          name: Validate UI LavaMoat policy
          command: SCRIPT='app lavamoat:ui' .circleci/scripts/validate-lavamoat-policy.sh
      - notify_slack_ci_failure

  build-common:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn common build
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.common-dir >>/dist
      - notify_slack_ci_failure

  build-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn app build:app
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/app ./${APP_DIR}/dist-app
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-app
      - notify_slack_ci_failure

  build-app-test-extension:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn app build:app:test:extension
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/app ./${APP_DIR}/dist-app-test-extension
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-app-test-extension
      - notify_slack_ci_failure

  build-app-test-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn app build:app:test:app
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/app ./${APP_DIR}/dist-app-test-app
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-app-test-app
      - notify_slack_ci_failure

  build-ui:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Setup app ui build
          command: yarn setup:ui:build
      - run:
          name: build
          command: yarn app build:ui:lavamoat:ci
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/ui ./${APP_DIR}/dist-ui
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-ui
      - notify_slack_ci_failure

  build-ui-test-extension:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Setup app ui build
          command: yarn setup:ui:build
      - run:
          name: build
          command: yarn app build:ui:lavamoat:ci
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/ui ./${APP_DIR}/dist-ui-test-extension
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-ui-test-extension
      - notify_slack_ci_failure

  build-ui-test-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Setup app ui build
          command: yarn setup:ui:build
      - run:
          name: build
          command: yarn app build:ui:lavamoat:ci
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${APP_DIR}/dist/ui ./${APP_DIR}/dist-ui-test-app
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.app-dir >>/dist-ui-test-app
      - notify_slack_ci_failure

  build-extension-test-extension:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn app build:extension:test
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${EXTENSION_DIR}/dist ./${EXTENSION_DIR}/dist-extension-test
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.extension-dir >>/dist-extension-test
      - notify_slack_ci_failure

  build-extension-test-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: yarn app build:extension:test:app
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${EXTENSION_DIR}/dist ./${EXTENSION_DIR}/dist-extension-test-app
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.extension-dir >>/dist-extension-test-app
      - notify_slack_ci_failure

  build-extension-test-mv3:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: build
          command: ENABLE_MV3=true yarn app build:extension:test
      - run:
          name: Move dist to avoid conflicts
          command: mv ./${EXTENSION_DIR}/dist ./${EXTENSION_DIR}/dist-extension-test-mv3
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.extension-dir >>/dist-extension-test-mv3
      - notify_slack_ci_failure

  lint-common:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: lint
          command: yarn common lint
      - notify_slack_ci_failure

  lint-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: lint
          command: yarn app lint
      - notify_slack_ci_failure

  test-unit-common:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: test
          command: yarn common test
      - store_test_results:
          path: << pipeline.parameters.common-dir >>/test/results/junit.xml
      - notify_slack_ci_failure

  test-unit-app:
    executor: node-browsers
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: test
          command: yarn app test
      - store_test_results:
          path: << pipeline.parameters.app-dir >>/test/results/junit.xml
      - notify_slack_ci_failure

  test-e2e-extension:
    executor: node-browsers
    parallelism: 10
    steps:
      - checkout_with_submodule
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app-test-extension ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui-test-extension ./${APP_DIR}/dist/ui
      - run:
          name: Move extension build
          command: |
            mv ./${EXTENSION_DIR}/dist-extension-test ./${EXTENSION_DIR}/dist
      - run:
          name: test:e2e:chrome:desktop
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn app test:e2e:extension --retries 4
            fi
          no_output_timeout: 20m
      - notify_slack_ci_failure

  test-e2e-extension-snaps:
    executor: node-browsers
    parallelism: 2
    steps:
      - checkout_with_submodule
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app-test-extension ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui-test-extension ./${APP_DIR}/dist/ui
      - run:
          name: Move extension build
          command: |
            mv ./${EXTENSION_DIR}/dist-extension-test ./${EXTENSION_DIR}/dist
      - run:
          name: test:e2e:chrome:desktop:snaps
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn app test:e2e:extension:snaps --retries 4
            fi
          no_output_timeout: 20m
      - notify_slack_ci_failure

  test-e2e-extension-mv3:
    executor: node-browsers
    parallelism: 10
    steps:
      - checkout_with_submodule
      - run:
          name: Re-Install Chrome
          command: ./.circleci/scripts/chrome-install.sh
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app-test-extension ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui-test-extension ./${APP_DIR}/dist/ui
      - run:
          name: Move extension build
          command: |
            mv ./${EXTENSION_DIR}/dist-extension-test-mv3 ./${EXTENSION_DIR}/dist
      - run:
          name: test:e2e:chrome:desktop:mv3
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn app test:e2e:extension:mv3 --retries 2 || echo "Temporarily suppressing MV3 e2e test failures"
            fi
          no_output_timeout: 20m
      - notify_slack_ci_failure

  test-e2e-app:
    executor: playwright
    parallelism: 4
    steps:
      - checkout_with_submodule
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app-test-app ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui-test-app ./${APP_DIR}/dist/ui
      - run:
          name: Move extension build
          command: |
            mv ./${EXTENSION_DIR}/dist-extension-test-app ./${EXTENSION_DIR}/dist
      - run:
          name: Install PW dependencies
          command: |
            cd ./${APP_DIR}
            npx playwright install chrome
      - run:
          name: Run e2e desktop command
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              xvfb-run yarn app test:e2e:app
            fi
          no_output_timeout: 20m
      - store_artifacts:
          name: html-report and artifacts
          path: ./<< pipeline.parameters.app-dir >>/test/playwright/playwright-reports/
      - store_test_results:
          name: report for pipeline integration
          path: ./<< pipeline.parameters.app-dir >>/test/playwright/playwright-reports/junit/test-results.xml
      - store_artifacts:
          name: screenshots and trace.zip
          path: ./<< pipeline.parameters.app-dir >>/test/playwright/test-results/
      - notify_slack_ci_failure

  package-windows:
    executor: electron-builder
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui ./${APP_DIR}/dist/ui
      - run:
          name: Package Windows nsis installer
          command: yarn app package:win:ci -p "never"
      - run:
          name: Move executable to its own folder
          command: |
            mkdir -p ./${APP_DIR}/packages/artifacts
            mv ./${APP_DIR}/packages/metamask-desktop-*-setup.exe ./${APP_DIR}/packages/artifacts/
      - store_artifacts:
          path: ./<< pipeline.parameters.app-dir >>/packages/artifacts
      - notify_slack_ci_failure

  package-linux:
    executor: electron-builder
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui ./${APP_DIR}/dist/ui
      - run:
          name: Package Linux AppImage
          command: yarn app package:linux:ci -p "never"
      - run:
          name: Move executable to its own folder
          command: |
            mkdir -p ./${APP_DIR}/packages/artifacts
            mv ./${APP_DIR}/packages/metamask-desktop-*.AppImage ./${APP_DIR}/packages/artifacts/
      - store_artifacts:
          path: ./<< pipeline.parameters.app-dir >>/packages/artifacts
      - notify_slack_ci_failure

  package-mac:
    executor: mac
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Move app build
          command: |
            mkdir -p ./${APP_DIR}/dist
            mv ./${APP_DIR}/dist-app ./${APP_DIR}/dist/app
      - run:
          name: Move UI build
          command: |
            mv ./${APP_DIR}/dist-ui ./${APP_DIR}/dist/ui
      - run:
          name: Finalise dependencies
          command: yarn
      - run:
          name: Package Mac images
          command: yarn app package:mac -p "never"
      - run:
          name: Move executable to its own folder
          command: |
            mkdir -p ./${APP_DIR}/packages/artifacts
            mv ./${APP_DIR}/packages/MetaMask*.dmg ./${APP_DIR}/packages/artifacts/
      - store_artifacts:
          path: ./<< pipeline.parameters.app-dir >>/packages/artifacts
      - notify_slack_ci_failure
