diff --git a/node_modules/@sentry/electron/common/process.js b/node_modules/@sentry/electron/common/process.js
index fb00e31..d51c255 100644
--- a/node_modules/@sentry/electron/common/process.js
+++ b/node_modules/@sentry/electron/common/process.js
@@ -4,7 +4,7 @@ exports.ensureProcess = void 0;
 function ensureProcess(expected) {
     // eslint-disable-next-line no-restricted-globals
     const current = typeof window !== 'undefined' ? 'renderer' : 'main';
-    if (current !== expected) {
+    if (expected !== 'main' && current !== expected) {
         throw new Error(`This code is intended to run in the Electron ${expected} process but is currently running in the ${current} process.
 This can occur if a bundler picks the wrong entry point.
 
diff --git a/node_modules/@sentry/electron/main/index.js b/node_modules/@sentry/electron/main/index.js
index 76dfa80..bce26b7 100644
--- a/node_modules/@sentry/electron/main/index.js
+++ b/node_modules/@sentry/electron/main/index.js
@@ -2,7 +2,6 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.IPCMode = exports.defaultIntegrations = exports.init = exports.Integrations = exports.ElectronOfflineNetTransport = exports.ElectronNetTransport = exports.lastEventId = exports.NodeClient = exports.NodeBackend = exports.withScope = exports.setUser = exports.setTags = exports.setTag = exports.setExtras = exports.setExtra = exports.setContext = exports.startTransaction = exports.Scope = exports.Hub = exports.getCurrentHub = exports.getHubFromCarrier = exports.configureScope = exports.captureMessage = exports.captureEvent = exports.captureException = exports.addBreadcrumb = exports.addGlobalEventProcessor = exports.Severity = void 0;
 const tslib_1 = require("tslib");
 const common_1 = require("../common");
-(0, common_1.ensureProcess)('main');
 const node_1 = require("@sentry/node");
 const ElectronMainIntegrations = (0, tslib_1.__importStar)(require("./integrations"));
 var types_1 = require("@sentry/types");
